//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DESERVE.Manager.Marshall {
    using System.Runtime.Serialization;
    using System;
	using DESERVE.Common;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Marshall.IServerMarshall", CallbackContract=typeof(DESERVE.Manager.Marshall.IServerMarshallCallback))]
    public interface IServerMarshall {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerMarshall/RegisterEvents")]
        void RegisterEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMarshall/get_Name", ReplyAction="http://tempuri.org/IServerMarshall/get_NameResponse")]
        string get_Name();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMarshall/get_IsRunning", ReplyAction="http://tempuri.org/IServerMarshall/get_IsRunningResponse")]
        bool get_IsRunning();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMarshall/get_Arguments", ReplyAction="http://tempuri.org/IServerMarshall/get_ArgumentsResponse")]
        CommandLineArgs get_Arguments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMarshall/Stop", ReplyAction="http://tempuri.org/IServerMarshall/StopResponse")]
        void Stop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMarshall/Save", ReplyAction="http://tempuri.org/IServerMarshall/SaveResponse")]
        void Save();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMarshall/WriteToConsole", ReplyAction="http://tempuri.org/IServerMarshall/WriteToConsoleResponse")]
        void WriteToConsole(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerMarshallCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerMarshall/OnChatMessage")]
        void OnChatMessage(ulong remoteUserId, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerMarshall/IsSavingChanged")]
        void IsSavingChanged(bool isSaving);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerMarshall/OnServerStopped")]
        void OnServerStopped();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerMarshall/OnServerStarted")]
        void OnServerStarted();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerMarshallChannel : DESERVE.Manager.Marshall.IServerMarshall, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerMarshallClient : System.ServiceModel.DuplexClientBase<DESERVE.Manager.Marshall.IServerMarshall>, DESERVE.Manager.Marshall.IServerMarshall {
        
        public ServerMarshallClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServerMarshallClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServerMarshallClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerMarshallClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerMarshallClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterEvents() {
            base.Channel.RegisterEvents();
        }
        
        public string get_Name() {
            return base.Channel.get_Name();
        }
        
        public bool get_IsRunning() {
            return base.Channel.get_IsRunning();
        }
        
        public CommandLineArgs get_Arguments() {
            return base.Channel.get_Arguments();
        }
        
        public void Stop() {
            base.Channel.Stop();
        }
        
        public void Save() {
            base.Channel.Save();
        }
        
        public void WriteToConsole(string message) {
            base.Channel.WriteToConsole(message);
        }
    }
}
